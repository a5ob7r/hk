#!/bin/bash
# Casual command line history statistics script for bash, zsh and fish.

set -Cueo pipefail

hk::version () {
  echo '0.1.0'
}

hk::help () {
  echo 'Casual command line history statistics script for bash, zsh and fish.

Input history entries to this.
$ history | hk # bash, fish
$ history 1 | hk # zsh

Usage: hk [-h|--help] [--version]

Avairable options:
  -h, --help      Show this help message.
  --version       Show version info.
'
}

hk::normalize () {
  sed -E \
      -e 's/\\\\n/ /g' \
      -e 's/\\n/ /g' \
      -e 's/^ *[[:digit:]]*\** +//g' \
      -e "s/^([[:alpha:]_][[:alnum:]_]*=([[:alnum:]_]*|'.*'|\".*\")([[:alnum:]_]|(\\\ ))* +)*//g" \
    | cut -d ' ' -f 1 \
  ;
}

hk::countup () {
  sort \
    | uniq -c \
    | sort -r -h \
  ;
}

hk::analyze () {
  local -a entries=()
  local -i total=0

  # NOTE: Wanna use `mapfile` but default bash version on macOS BigSur is so
  # old and `mapfile` isn't implemented on it. So sad...
  while read -r entry; do
    entries+=("$entry")

    read -r -a arr <<<"$entry"
    total+="${arr[0]}"
  done

  echo "       total entry number: ${total}" >&2
  echo "total unique entry number: ${#entries[@]}" >&2

  local IFS=$'\n'
  awk -v total="$total" '{ printf "%10d(%f) %s\n", $1, $1/total, $2 }' <<<"${entries[*]}"
}

# Main

while [[ $# != 0 ]]; do
  case "$1" in
    -h | --help )
      hk::help
      exit 0
      ;;
    --version )
      hk::version
      exit 0
      ;;
    * )
      hk::help
      exit 1
      ;;
  esac
done

hk::normalize \
  | hk::countup \
  | hk::analyze \
  ;
